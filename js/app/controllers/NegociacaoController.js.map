{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_ordemAtual","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","console","log","error","coluna","inverteOrdem","ordena","a","b","textoParaData","value","parseInt","parseFloat","focus","apaga","esvazia","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from '../models/ListaNegociacoes';\r\nimport { Mensagem } from '../models/Mensagem';\r\nimport { NegociacoesView } from '../views/NegociacoesView';\r\nimport { MensagemView } from '../views/MensagemView';\r\nimport { NegociacaoService } from '../services/NegociacaoService';\r\nimport { DateHelper } from '../helpers/DateHelper';\r\nimport { Bind } from '../helpers/Bind';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nclass NegociacaoController {\r\n\r\n    constructor() {\r\n\r\n        let $ = document.querySelector.bind(document);\r\n\r\n        this._ordemAtual = ''; // quando a página for carregada, não tem critério. Só passa a ter quando ele começa a clicar nas colunas\r\n\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n\r\n        // this._NegociacoesView.update(this._listaNegociacoes);\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView($('#mensagemView')),\r\n            'texto');\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao))\r\n            ).catch(erro => this._mensagem.texto = erro);\r\n\r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    adiciona(event) {\r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            }).catch(erro => this._mensagem.texto = erro);\r\n\r\n\r\n\r\n        // try {\r\n        //     this._listaNegociacoes.adiciona(this._criaNegociacao());\r\n        //     // this._NegociacoesView.update(this._listaNegociacoes);\r\n        //     this._mensagem.texto = 'Negociacao adicionada com sucesso';\r\n        //     // this._mensagemView.update(this._mensagem);\r\n        //     this._limpaFormulario();\r\n        // } catch (erro) {\r\n        //     this._mensagem.texto = erro;\r\n        // }\r\n\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações do período importadas com sucesso.'\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this._mensagem.texto = error\r\n            });\r\n\r\n        /*\r\n        service.obterNegociacoesDaSemana()\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociação da semana obtida com sucesso.';\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n        service.obterNegociacoesDaSemanaAnterior()\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociação da semana obtida com sucesso.';\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n        service.obterNegociacoesDaSemanaRetrasada()\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociação da semana obtida com sucesso.';\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n        */\r\n\r\n\r\n        /*\r\n        service.obterNegociacoesDaSemana((erro, negociacoes) => {\r\n            if (erro) {\r\n                this._mensagem.texto = erro;\r\n                return;\r\n            }\r\n\r\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n\r\n            service.obterNegociacoesDaSemanaAnterior((erro, negociacoes) => {\r\n                if (erro) {\r\n                    this._mensagem.texto = erro;\r\n                    return;\r\n                }\r\n\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n\r\n                service.obterNegociacoesDaSemanaRetrasada((erro, negociacoes) => {\r\n                    if (erro) {\r\n                        this._mensagem.texto = erro;\r\n                        return;\r\n                    }\r\n\r\n                    negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                    this._mensagem.texto = 'Negociações importadas com sucesso.';\r\n                });\r\n            });\r\n        });\r\n        */\r\n    }\r\n\r\n    ordena(coluna) {\r\n        if (this._ordemAtual == coluna) {\r\n            // inverte a ordem da lista\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n\r\n    }\r\n\r\n\r\n\r\n    _criaNegociacao() {\r\n\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    _limpaFormulario() {\r\n        this._inputData.value = ''\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    apaga() {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n        // ConnectionFactory\r\n        //     .getConnection()\r\n        //     .then(connection => new NegociacaoDao(connection))\r\n        //     .then(dao => dao.apagaTodos())\r\n        //     .then(mensagem => {\r\n\r\n        //         this._mensagem.texto = mensagem;\r\n        //         // this._mensagemView.update(this._mensagem);\r\n        //         this._listaNegociacoes.esvazia();\r\n        //         // this._NegociacoesView.update(this._listaNegociacoes);\r\n\r\n        //     })\r\n\r\n    }\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n    return negociacaoController;\r\n}"]}